definitions:
  controllers.AllPhoneResponse:
    properties:
      brand:
        example: Samsung
        type: string
        x-order: "1"
      image_url:
        example: ""
        type: string
        x-order: "5"
      model:
        example: Galaxy
        type: string
        x-order: "2"
      phone_id:
        example: 1
        type: integer
        x-order: "0"
      price:
        example: 10000
        type: integer
        x-order: "4"
      release_date:
        example: "2023-11-11T00:00:00+07:00"
        type: string
        x-order: "3"
    type: object
  controllers.AllReviewResponse:
    properties:
      created_at:
        example: ""
        type: string
        x-order: "6"
      phone:
        allOf:
        - $ref: '#/definitions/controllers.PhoneResponse'
        x-order:2: true
      phone_id:
        example: 1
        type: integer
        x-order: "1"
      rating:
        example: 1
        type: integer
        x-order: "4"
      review_id:
        example: 1
        type: integer
        x-order: "0"
      review_text:
        example: this is sample text
        type: string
        x-order: "5"
      user_id:
        example: 1
        type: integer
        x-order: "3"
    type: object
  controllers.ChangePasswordInput:
    properties:
      confirm_new_password:
        example: admin1
        type: string
        x-order: "3"
      current_password:
        example: admin
        type: string
        x-order: "1"
      new_password:
        example: admin1
        type: string
        x-order: "2"
      username:
        example: admin
        type: string
        x-order: "0"
    required:
    - confirm_new_password
    - current_password
    - new_password
    - username
    type: object
  controllers.ChangePasswordResponse:
    properties:
      message:
        example: change password success
        type: string
    type: object
  controllers.CreateCommentInput:
    properties:
      comment_text:
        example: this review is rigged!
        type: string
    required:
    - comment_text
    type: object
  controllers.CreateCommentResponse:
    properties:
      comments:
        allOf:
        - $ref: '#/definitions/models.Comment'
        x-order: "1"
      message:
        example: comment created successfully
        type: string
        x-order: "0"
    type: object
  controllers.CreateLikeResponse:
    properties:
      message:
        example: like created successfully
        type: string
        x-order: "0"
    type: object
  controllers.CreatePhoneInput:
    properties:
      brand:
        example: Samsung
        type: string
        x-order: "1"
      image_url:
        example: ""
        type: string
        x-order: "5"
      model:
        example: Galaxy
        type: string
        x-order: "2"
      price:
        example: 10000
        type: integer
        x-order: "4"
      release_date:
        example: "2023-01-01T00:00:00Z"
        type: string
        x-order: "3"
    type: object
  controllers.CreateReviewInput:
    properties:
      rating:
        example: 1
        type: integer
      review_text:
        example: sample review text
        type: string
    required:
    - rating
    - review_text
    type: object
  controllers.CreatedPhoneResponse:
    properties:
      message:
        example: phone created successfully
        type: string
        x-order: "0"
      phone:
        properties:
          brand:
            example: Samsung
            type: string
            x-order: "1"
          image_url:
            example: ""
            type: string
            x-order: "5"
          model:
            example: Galaxy
            type: string
            x-order: "2"
          phone_id:
            example: 1
            type: integer
            x-order: "0"
          price:
            example: 10000
            type: integer
            x-order: "4"
          release_date:
            example: "2023-01-01T00:00:00Z"
            type: string
            x-order: "3"
        type: object
        x-order: "1"
    type: object
  controllers.DeleteReviewResponse:
    properties:
      message:
        example: review deleted successfully
        type: string
        x-order: "0"
    type: object
  controllers.EditReviewInput:
    properties:
      rating:
        example: 1
        type: integer
      review_text:
        example: sample review text
        type: string
    type: object
  controllers.EditReviewResponse:
    properties:
      message:
        example: review updated successfully
        type: string
        x-order: "0"
      reviews:
        items:
          $ref: '#/definitions/models.Review'
        type: array
        x-order: "1"
    type: object
  controllers.LoginInput:
    properties:
      password:
        example: admin
        type: string
        x-order: "1"
      username:
        example: admin
        type: string
        x-order: "0"
    required:
    - password
    - username
    type: object
  controllers.LoginResponse:
    properties:
      message:
        example: login success
        type: string
        x-order: "0"
      token:
        example: string
        type: string
        x-order: "2"
      user:
        properties:
          email:
            example: john@example.com
            type: string
          role:
            example: user
            type: string
          username:
            example: John
            type: string
        type: object
        x-order: "1"
    type: object
  controllers.PhoneByIDResponse:
    properties:
      brand:
        example: Samsung
        type: string
        x-order: "1"
      image_url:
        example: ""
        type: string
        x-order: "5"
      model:
        example: Galaxy
        type: string
        x-order: "2"
      phone_id:
        example: 1
        type: integer
        x-order: "0"
      price:
        example: 10000
        type: integer
        x-order: "4"
      release_date:
        example: "2023-11-11"
        type: string
        x-order: "3"
      reviews:
        items:
          $ref: '#/definitions/controllers.ReviewResponse'
        type: array
        x-order: "6"
    type: object
  controllers.PhoneResponse:
    properties:
      brand:
        example: Samsung
        type: string
      image_url:
        example: ""
        type: string
      model:
        example: Galaxy
        type: string
      phone_id:
        example: 1
        type: integer
      price:
        example: 10000
        type: integer
      release_date:
        example: "2023-11-11"
        type: string
    type: object
  controllers.RegisterInput:
    properties:
      email:
        example: admin@mail.com
        type: string
        x-order: "2"
      password:
        example: admin
        type: string
        x-order: "1"
      role:
        example: Admin
        type: string
        x-order: "3"
      username:
        example: admin
        type: string
        x-order: "0"
    required:
    - email
    - password
    - role
    - username
    type: object
  controllers.RegisterResponse:
    properties:
      message:
        example: registration success
        type: string
        x-order: "0"
      user:
        properties:
          email:
            example: john@example.com
            type: string
          role:
            example: Admin
            type: string
          username:
            example: John
            type: string
        type: object
        x-order: "1"
    type: object
  controllers.ReviewResponse:
    properties:
      phone_id:
        example: 1
        type: integer
      rating:
        example: 9
        type: integer
      review_id:
        example: 1
        type: integer
      review_text:
        example: product is nice
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  models.Comment:
    properties:
      comment_id:
        example: 1
        type: integer
      comment_text:
        example: sample comment text
        type: string
      created_at:
        example: "2030-01-01 00:00:00"
        type: string
      likes:
        items:
          $ref: '#/definitions/models.Like'
        type: array
      review_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  models.Like:
    properties:
      comment_id:
        example: 1
        type: integer
      created_at:
        example: "2030-01-01 00:00:00"
        type: string
      like_id:
        example: 1
        type: integer
      review_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  models.Review:
    properties:
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
        x-order: "5"
      created_at:
        example: "2030-01-01 00:00:00"
        type: string
        x-order: "5"
      likes:
        items:
          $ref: '#/definitions/models.Like'
        type: array
        x-order: "6"
      phone_id:
        example: 1
        type: integer
        x-order: "1"
      rating:
        example: 8
        type: integer
        x-order: "3"
      review_id:
        example: 1
        type: integer
        x-order: "0"
      review_text:
        example: sample review text
        type: string
        x-order: "4"
      user_id:
        example: 1
        type: integer
        x-order: "2"
    type: object
info:
  contact: {}
paths:
  /change-password:
    post:
      description: Change user password by inputting the current password and the
        new password.
      parameters:
      - description: the body to change user password
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ChangePasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.ChangePasswordResponse'
      summary: Change user password.
      tags:
      - Auth
  /login:
    post:
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.LoginResponse'
      summary: Login as user.
      tags:
      - Auth
  /phones:
    get:
      description: Get a list of Phones
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.AllPhoneResponse'
            type: array
      summary: List all phones
      tags:
      - Phones
    post:
      description: Create a phone
      parameters:
      - description: the body to create a phone
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreatePhoneInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.CreatedPhoneResponse'
      security:
      - Bearer: []
      summary: Create a phone
      tags:
      - Phones
  /phones/{phone_id}:
    get:
      description: Get phone details by ID
      parameters:
      - description: PhoneID
        in: path
        name: phone_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.PhoneByIDResponse'
      summary: Get phone details by ID
      tags:
      - Phones
  /phones/{phone_id}/reviews:
    get:
      description: Get all phone reviews by ID
      parameters:
      - description: PhoneID
        in: path
        name: phone_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get all phone reviews by its ID
      tags:
      - Phones
    post:
      description: Create phone review by phone ID
      parameters:
      - description: PhoneID
        in: path
        name: phone_id
        required: true
        type: string
      - description: the body to create phone review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateReviewInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Review'
      security:
      - Bearer: []
      summary: Create a phone review by phone ID
      tags:
      - Phones
  /register:
    post:
      description: registering a user from public access.
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Register Success Response
          schema:
            $ref: '#/definitions/controllers.RegisterResponse'
      summary: Register a user.
      tags:
      - Auth
  /reviews:
    get:
      description: Get a list of Reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controllers.AllReviewResponse'
            type: array
      summary: List all reviews
      tags:
      - Reviews
  /reviews/{review_id}:
    delete:
      description: Delete a review
      parameters:
      - description: ReviewID
        in: path
        name: review_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.DeleteReviewResponse'
      security:
      - Bearer: []
      summary: Delete a review
      tags:
      - Reviews
    put:
      description: Update a review
      parameters:
      - description: ReviewID
        in: path
        name: review_id
        required: true
        type: string
      - description: the body to edit phone review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.EditReviewInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.EditReviewResponse'
      security:
      - Bearer: []
      summary: Update a review
      tags:
      - Reviews
  /reviews/{review_id}/comments:
    get:
      description: Get all review comment by review ID
      parameters:
      - description: ReviewID
        in: path
        name: review_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Comment'
            type: array
      summary: Get all review comment by review ID
      tags:
      - Reviews
    post:
      description: Create a review comment by review ID
      parameters:
      - description: ReviewID
        in: path
        name: review_id
        required: true
        type: string
      - description: the body to create phone review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCommentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.CreateCommentResponse'
      security:
      - Bearer: []
      summary: Create a review comment by review ID
      tags:
      - Reviews
  /reviews/{review_id}/likes:
    get:
      description: Get all review likes by review ID
      parameters:
      - description: ReviewID
        in: path
        name: review_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Like'
            type: array
      summary: Get all review likes by review ID
      tags:
      - Reviews
    post:
      description: Create a review like by review ID
      parameters:
      - description: ReviewID
        in: path
        name: review_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.CreateLikeResponse'
      security:
      - Bearer: []
      summary: Create a review like by review ID
      tags:
      - Reviews
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
